{
    "swagger": "2.0",
    "info": {
        "title": "Bungalow Insurance API",
        "description": "Generate quotes and purchase renters insurance via the Bungalow API,\npowered by Homesite.\n",
        "version": "1.0.0"
    },
    "host": "staging.bungalowinsurance.com",
    "schemes": [
        "https"
    ],
    "basePath": "/api/v1",
    "securityDefinitions": {
        "Token": {
            "description": "Simple HTTP Token authentication (i.e. an 'Authorization' header field with\n'Token token=test1234' as the value). Your token will be provided by Bungalow.\n",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "produces": [
        "application/json"
    ],
    "paths": {
        "/quote_requests": {
            "post": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "summary": "Generate a quote for renters insurance",
                "description": "This is the entry point for the renters insurance purchase workflow. A\nsuccessful quote request will trigger a background process that performs\na number of actions (identity confirmation, geographic risk analysis, etc.)\nand build a renters insurance quote.\n\n**IMPORTANT**: A successful response from this endpoint will not include the\nquote itself, it initiates a long-running (20-30 second) process that\nwill generate the quote. Completion of this process results in a webhook\n(documented elsewhere).\n",
                "parameters": [
                    {
                        "name": "quote_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuoteRequestRoot"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A simple object with the quote request id for future reference.",
                        "schema": {
                            "$ref": "#/definitions/QuoteRequestResponse"
                        }
                    },
                    "422": {
                        "description": "Validation failure",
                        "schema": {
                            "$ref": "#/definitions/QuoteRequestResponseWithErrors"
                        }
                    }
                }
            }
        },
        "/quote_requests/:quote_request_id/purchases": {
            "post": {
                "description": "This is the end point where the renters can purchase the insurance. A successful purchase will be returned with paid amount, policy number and effective date of policy. \n",
                "parameters": [
                    {
                        "name": "purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseRoot"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A simple object with the policy number and effective date of policy for future reference.",
                        "schema": {
                            "$ref": "#/definitions/PurchaseResponse"
                        }
                    },
                    "422": {
                        "description": "Validation failure",
                        "schema": {
                            "$ref": "#/definitions/PurchaseResponseWithErrors"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "QuoteRequestRoot": {
            "type": "object",
            "properties": {
                "quote_request": {
                    "$ref": "#/definitions/QuoteRequest"
                }
            }
        },
        "QuoteRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "First name of insured, 20 characters max"
                },
                "last_name": {
                    "type": "string",
                    "description": "Last name of insured, 20 characters max"
                },
                "date_of_birth": {
                    "type": "string",
                    "description": "DOB of insured in YYYY-MM-DD format. Year must be greater than 1900 and\ninsured at least 18 years of age\n"
                },
                "email": {
                    "type": "string",
                    "description": "Primary email of insured"
                }
            }
        },
        "QuoteRequestResponse": {
            "type": "object",
            "properties": {
                "quote_request": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "QuoteRequestResponseWithErrors": {
            "type": "object",
            "properties": {
                "quote_request": {
                    "type": "object",
                    "properties": {
                        "errors": {
                            "type": "object",
                            "properties": {
                                "field_name": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "PurchaseRoot": {
            "type": "object",
            "properties": {
                "purchase": {
                    "$ref": "#/definitions/PurchaseRequest"
                }
            }
        },
        "PurchaseRequest": {
            "type": "object",
            "properties": {
                "phone": {
                    "type": "string",
                    "description": "Phone number of payer"
                },
                "same_as_property_address": {
                    "type": "boolean",
                    "description": "Option for using the same address of the property. False value on this option will require mailing_address_line_1, mailing_city, mailing_state to be provided."
                },
                "mailing_address_line_1": {
                    "type": "string",
                    "description": "mailing address line 1"
                },
                "mailing_address_line_2": {
                    "type": "string",
                    "description": "(optional) mailing address line 2"
                },
                "mailing_city": {
                    "type": "string",
                    "description": "city of mailing address"
                },
                "mailing_state": {
                    "type": "string",
                    "description": "acronym for state of mailing address, i.e. 'CA', 'NY'"
                },
                "card_holder_first_name": {
                    "type": "string",
                    "description": "first name of credit card holder"
                },
                "card_holder_last_name": {
                    "type": "string",
                    "description": "last name of credit card holder"
                },
                "card_type": {
                    "type": "string",
                    "description": "options for type of the credit card are 'VISA', 'MasterCard', 'AmericanExpress', and 'Discover'"
                },
                "card_number": {
                    "type": "string",
                    "description": "number of the credit card"
                },
                "payment_plan": {
                    "type": "string",
                    "description": "options for payment plan are 'Yearly' or 'Monthly'"
                },
                "card_expiration_month": {
                    "type": "string",
                    "description": "month of credit card expiration, i.e. '10', '11'"
                },
                "card_expiration_year": {
                    "type": "string",
                    "description": "year of credit card expiration, i.e. '19'"
                },
                "electronic_signature": {
                    "type": "string",
                    "description": "electronic signature. This is required when payment_plan is 'Monthly'."
                },
                "referral_code": {
                    "type": "string",
                    "description": "referral code."
                }
            }
        },
        "PurchaseResponse": {
            "type": "object",
            "properties": {
                "purchase": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "policy_number": {
                            "type": "string"
                        },
                        "effective_date_of_policy": {
                            "type": "string"
                        },
                        "amount_payment_cents": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "PurchaseResponseWithErrors": {
            "type": "object",
            "properties": {
                "purchase": {
                    "type": "object",
                    "properties": {
                        "errors": {
                            "type": "object",
                            "properties": {
                                "field_name": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}